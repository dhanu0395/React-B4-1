trigger:
- none  # or your branch name
 
pool:
  name: 'Newpool'
 
variables:
  SONAR_PROJECT_KEY: 'sonarKey'
  SONAR_PROJECT_NAME: 'sonarReact'
  SONAR_PROJECT_VERSION: '1.0'
  SONAR_SERVICE_CONNECTION: 'yamunaSonar'
  ACR_NAME: 'yamunaACR'
  IMAGE_NAME: 'reactJs'
  BUILD_ARTIFACT_NAME: 'drop'
  AZURE_SERVICE_CONNECTION: 'yamunaARM'   # New variable
  STORAGE_ACCOUNT_NAME: 'yamuna88351'        # Your Storage Account name
  CONTAINER_NAME: 'reactartifact'
 
stages:
# ---------------------- Stage 1: Code Quality ----------------------
- stage: SonarQubeAnalysis
  displayName: "SonarQube Code Analysis"
  jobs:
  - job: SonarQube
    displayName: "Run SonarQube Analysis"
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: '$(SONAR_SERVICE_CONNECTION)'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '$(SONAR_PROJECT_KEY)'
        cliProjectName: '$(SONAR_PROJECT_NAME)'
        cliProjectVersion: '$(SONAR_PROJECT_VERSION)'
 
    - script: |
        npm install
        npm run build
      displayName: "Build React app"
 
    - task: SonarQubeAnalyze@5
      displayName: "Run SonarQube Analysis"
 
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
 
# ---------------------- Stage 2: Build & Publish Artifact ----------------------
- stage: BuildAndPublish
  dependsOn: SonarQubeAnalysis
  displayName: "Build and Publish Artifact"
  jobs:
  - job: Build
    steps:
    - checkout: self
 
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Use Node.js 18'
 
    - script: |
        npm install
        npm run build
      displayName: "Build React App"
 
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'build'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/$(BUILD_ARTIFACT_NAME)'
 
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(BUILD_ARTIFACT_NAME)'
        ArtifactName: '$(BUILD_ARTIFACT_NAME)'
        publishLocation: 'Container'

    # Upload artifact to Azure Storage
    - task: AzureFileCopy@5
      displayName: "Upload Artifact to Azure Blob Storage"
      inputs:
        SourcePath: '$(Build.ArtifactStagingDirectory)/$(BUILD_ARTIFACT_NAME)'
        azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
        Destination: 'AzureBlob'
        storage: '$(STORAGE_ACCOUNT_NAME)'
        ContainerName: '$(CONTAINER_NAME)'
        cleanTargetBeforeCopy: true

# ---------------------- Stage 3: Build Docker Image & Push to ACR ----------------------
- stage: DockerBuildPush
  dependsOn: BuildAndPublish
  displayName: "Build Docker Image and Push to ACR"
  jobs:
  - job: Docker
    steps:
    - download: current
      artifact: drop
 
    - task: Docker@2
      displayName: "Build Docker Image"
      inputs:
        containerRegistry: '$(ACR_NAME)-connection'  # your ACR service connection name
        repository: '$(IMAGE_NAME)'
        command: 'buildAndPush'
        Dockerfile: '/Dockerfile'
        tags: |
          latest
          $(Build.BuildId)
